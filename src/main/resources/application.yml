topic:
  name: users
  partitions-num: 6
  replication-factor: 3
server:
  port: 9080
spring:
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/activation_dashboard}
    username: ${DB_USR:act_dash_user}
    password: ${DB_PWD:pass@word1}
    hikari:
      idle-timeout: ${DB_IDLE_TIMEOUT:30000}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      maximum-pool-size: ${DB_MAXIMUM_POOL_SIZE:10}
      leak-detection-threshold: 60000

  jpa:
    show-sql: false
    open-in-view: false
    hibernate:
      ddl-auto: update

    properties:
      hibernate:
        show_sql: false
        format_sql: false
        use_sql_comments: false
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers:
      - mybootstrap.confluent.cloud:9092
    properties:
      # CCloud broker connection parameters
      ssl.endpoint.identification.algorithm: https
      sasl.mechanism: PLAIN
      request.timeout.ms: 20000
      retry.backoff.ms: 500
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="ccloud_key" password="ccloud_secret";
      security.protocol: SASL_SSL

      # CCloud Schema Registry Connection parameter
      schema.registry.url: https://schema-registry.aws.confluent.cloud
      basic.auth.credentials.source: USER_INFO
      schema.registry.basic.auth.user.info: sr_ccloud_key:sr_ccloud_key
    consumer:
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    template:
      default-topic:
logging:
  level:
    root: info
