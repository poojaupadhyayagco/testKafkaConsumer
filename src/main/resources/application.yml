server:
  port: 9080
spring:
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/activation_dashboard}
    username: ${DB_USR:act_dash_user}
    password: ${DB_PWD:pass@word1}
    hikari:
      idle-timeout: ${DB_IDLE_TIMEOUT:30000}
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      maximum-pool-size: ${DB_MAXIMUM_POOL_SIZE:10}
      leak-detection-threshold: 60000

  jpa:
    show-sql: false
    open-in-view: false
    hibernate:
      ddl-auto: update

    properties:
      hibernate:
        show_sql: false
        format_sql: false
        use_sql_comments: false
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: ${KAFKA_URL:localhost:9092}
    consumer:
      group-id: ${KAFKA_GROUP_ID:AET_DEV_REF_DATA_GID}
      max-poll-records: ${KAFKA_CONSUMER_MAX_POLL_RECORDS:200}

    properties:
      max:
        poll:
          interval:
            ms: ${KAFKA_MAX_POLL_INTERVAL_MS:1800000}
      bootstrap:
        servers: ${KAFKA_URL:localhost:9092}
      schema:
        registry:
          url: ${KAFKA_SCHEMA_REGISTRY_URL:http://localhost:8081}
      security:
        protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
      sasl:
        mechanism: PLAIN
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_CLUSTER_API_KEY:}" password="${KAFKA_CLUSTER_API_SECRET:}";
      basic:
        auth:
          credentials:
            source: ${KAFKA_AUTH_CRED_SOURCE:}
          user:
            info: ${KAFKA_SR_API_KEY_SECRET:}

logging:
  level:
    root: info
